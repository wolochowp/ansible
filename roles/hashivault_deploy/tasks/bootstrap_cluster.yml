---
- name: Set bootstrap allowed flag
  delegate_to: localhost
  run_once: true
  ansible.builtin.set_fact:
    hashivault_deploy_bootstrap_allowed: "{{ hashivault_deploy_initialized_hosts | length == 0 }}"

- name: Show skipping message if cluster already initialized
  delegate_to: localhost
  run_once: true
  ansible.builtin.debug:
    msg: >
      Vault bootstrap skipped because already initialized on hosts:
      {{ hashivault_deploy_initialized_hosts | join(', ') }}
  when: not hashivault_deploy_bootstrap_allowed


# ==========================================================
# Happens only once when have to bootstrap Vault Cluster(e.g. no inited vault nodes yet)
# ==========================================================
- name: Initialize Vault (Shamir) on first node if not initialized and seal is 'shamir'
  ansible.builtin.uri:
    url: "{{ hashivault_deploy_vault_addr }}/v1/sys/init"
    method: POST
    body_format: json
    body:
      secret_shares: "{{ hashivault_deploy_shamir_key_shares }}"
      secret_threshold: "{{ hashivault_deploy_shamir_key_threshold }}"
    return_content: true
    status_code: 200
  register: hashivault_deploy_vault_init
  when:
    - inventory_hostname == play_hosts[0]
    - not hashivault_deploy_initialized
    - hashivault_deploy_bootstrap_allowed
    - hashivault_deploy_seal_type == 'shamir'
  run_once: true
  no_log: true

- name: Save unseal keys and root token to file on controller
  ansible.builtin.copy:
    dest: "{{ hashivault_deploy_token }}"
    content: "{{ hashivault_deploy_vault_init.content }}"
    mode: '0600'
  delegate_to: localhost
  become: true
  run_once: true
  when:
    - inventory_hostname == play_hosts[0]
    - not hashivault_deploy_initialized
    - hashivault_deploy_seal_type == 'shamir'
    - hashivault_deploy_vault_init is defined
    - hashivault_deploy_bootstrap_allowed
  no_log: true

- name: Get Seal status
  ansible.builtin.include_tasks: check_vault_seal.yml

- name: Unseal leader Vault node
  ansible.builtin.include_tasks: unseal_vault.yml
  when:
    - inventory_hostname == play_hosts[0]
    - hashivault_deploy_bootstrap_allowed or hashivault_deploy_sealed
