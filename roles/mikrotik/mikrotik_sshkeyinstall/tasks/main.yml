#SPDX-License-Identifier: MIT-0
---
# Get users only if verification is enabled
- name: Get detailed user list from MikroTik
  community.routeros.command:
    commands:
      - /user print detail
  register: mikrotik_users_detail
  when: verify_users_exist

- name: Parse user names from detailed output
  set_fact:
    existing_mikrotik_users: "{{ mikrotik_users_detail.stdout[0] | regex_findall('name=\"([^\"]+)\"') }}"
  when: verify_users_exist

# Filter only if verifying users, otherwise use original list
- name: Filter mikrotik_ssh_users if verification is enabled
  set_fact:
    filtered_ssh_users: >-
      {{
        mikrotik_ssh_users
        if not verify_users_exist
        else mikrotik_ssh_users
          | selectattr('name', 'in', existing_mikrotik_users)
          | list
      }}

- name: Optionally flush all existing ssh keys for each existing user
  community.routeros.command:
    commands:
      - "/user ssh-keys remove [find user={{ item.name }}]"
  loop: "{{ filtered_ssh_users }}"
  when: allow_flushing_pubkeys | default(false)

- name: Upload public key to MikroTik device for existing users
  ansible.netcommon.net_put:
    src: "{{ role_path }}/files/{{ item.pubkey_file }}"
    dest: "{{ item.pubkey_file }}"
  loop: "{{ filtered_ssh_users }}"

- name: Import public key from uploaded file for existing users
  community.routeros.command:
    commands:
      - "/user ssh-keys import public-key-file={{ item.pubkey_file }} user={{ item.name }}"
  loop: "{{ filtered_ssh_users }}"